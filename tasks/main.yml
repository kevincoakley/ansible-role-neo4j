---
- name: Include OS family specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Set fact is_container
  ansible.builtin.set_fact:
    is_container: true
  when: >
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "docker"
       or ansible_virtualization_type == "containerd"
       or ansible_virtualization_type == "container"
      )
    )

- name: Install Neo4j
  ansible.builtin.package:
    name: "{{ neo4j_package }}"
    state: present
  when: neo4j_edition == 'community'

- name: Install Neo4j Enterprise
  ansible.builtin.package:
    name: "{{ neo4j_package }}"
    state: present
  when: neo4j_edition == 'enterprise'
  environment:
    NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'

- name: Ensure graph DB folder exists and has the correct permissions
  ansible.builtin.file:
    path: "{{ neo4j_server_database_location }}"
    state: directory
    owner: neo4j
    group: "{{ neo4j_group }}"
    mode: 0755

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Get neo4j version
  ansible.builtin.set_fact:
    neo4j_v: "{{ ansible_facts.packages[neo4j_package][0]['version'] | regex_replace('^1:', '') }}"

# https://neo4j.com/docs/upgrade-migration-guide/current/version-5/changelogs/configuration-settings/
# https://neo4j.com/docs/operations-manual/5/reference/configuration-settings/
# https://neo4j.com/docs/upgrade-migration-guide/current/version-4/changelogs/configuration-settings/
# https://neo4j.com/docs/operations-manual/4.4/reference/configuration-settings/
# https://neo4j.com/docs/operations-manual/3.5/reference/configuration-settings/
- name: Set neo4j config - replacements
  when:
    - not neo4j_conf_template|string
  block:
    - name: Set the neo4j data directory
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.directories\.data=.*'
        line: "dbms.directories.data={{ neo4j_server_database_location }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

    - name: Set the neo4j heap inital size
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.memory\.heap\.initial_size=.*'
        line: "dbms.memory.heap.initial_size={{ neo4j_memory_heap_initial_size }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

    - name: Set the neo4j heap max size
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.memory\.heap\.max_size=.*'
        line: "dbms.memory.heap.max_size={{ neo4j_memory_heap_max_size }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

    - name: Set the neo4j pagecache size
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.memory\.pagecache\.size=.*'
        line: "dbms.memory.pagecache.size={{ neo4j_memory_pagecache_size }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

    - name: Allow any connection to Neo4J
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^(# )?dbms.connectors.default_listen_address=0.0.0.0'
        line: "dbms.connectors.default_listen_address=0.0.0.0"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_allow_any_connection | bool
        - neo4j_v is version('4', '<')

    - name: Set the neo4j bolt listen address
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.connector\.bolt\.listen_address=.*'
        line: "dbms.connector.bolt.listen_address={{ neo4j_connector_bolt_listen_address }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('4', '<')

    - name: Set the neo4j http listen address
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.connector\.http\.listen_address=.*'
        line: "dbms.connector.http.listen_address={{ neo4j_connector_http_listen_address }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('4', '<')

    - name: Set the neo4j https listen address
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^dbms\.connector\.https\.listen_address=.*'
        line: "dbms.connector.https.listen_address={{ neo4j_connector_https_listen_address }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('4', '<')

    - name: Enable prometheus metrics
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^metrics\.prometheus\.enabled=.*'
        line: "metrics.prometheus.enabled={{ neo4j_prometheus_metrics_enabled }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

    - name: Set prometheus metrics interface
      ansible.builtin.lineinfile:
        dest: /etc/neo4j/neo4j.conf
        regexp: '^metrics\.prometheus\.endpoint=.*'
        line: "metrics.prometheus.endpoint={{ neo4j_prometheus_metrics_endpoint }}"
        state: present
      notify: Restart Neo4j
      when:
        - neo4j_v is version('5', '<')

- name: Set the neo4j config
  ansible.builtin.template:
    src: "{{ neo4j_conf_template }}"
    dest: /etc/neo4j/neo4j.conf
    mode: '0644'
  notify: Restart Neo4j
  when:
    - neo4j_conf_template|string

- name: Ensure open files soft and hard limits are set
  ansible.builtin.copy:
    src: etc/security/limits.d/neo4j.conf
    dest: /etc/security/limits.d/neo4j.conf
    owner: root
    group: root
    mode: 0644

- name: Ensure pam_limits.so is enabled
  ansible.builtin.lineinfile:
    dest: /etc/pam.d/su
    regexp: '^(# )?session    required   pam_limits.so'
    line: "session    required   pam_limits.so"
    state: present

- name: Ensure the Neo4j service is enabled and started
  ansible.builtin.service:
    name: neo4j
    enabled: true
    state: started
  when:
    - not is_container|bool

# https://neo4j.com/docs/operations-manual/current/configuration/set-initial-password/
- name: Set Neo4j initial password - v4
  ansible.builtin.command: "neo4j-admin set-initial-password '{{ neo4j_password }}'"
  args:
    creates: /var/lib/neo4j/data/dbms/auth.ini
  when:
    - neo4j_password is defined
    - neo4j_password | string
    - not is_container|bool
    - neo4j_v is version('5', '<')

- name: Set Neo4j initial password - v5
  ansible.builtin.command: "neo4j-admin dbms set-initial-password '{{ neo4j_password }}'"
  args:
    creates: /var/lib/neo4j/data/dbms/auth.ini
  when:
    - neo4j_password is defined
    - neo4j_password | string
    - not is_container|bool
    - neo4j_v is version('5', '>=')
